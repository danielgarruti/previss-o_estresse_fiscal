{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2605,"status":"ok","timestamp":1677755270477,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"3HrlSoQupBMW"},"outputs":[{"name":"stdout","output_type":"stream","text":["Populating the interactive namespace from numpy and matplotlib\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.datasets import make_classification\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_absolute_error, mean_squared_error, explained_variance_score, r2_score, roc_curve, confusion_matrix\n","%pylab inline\n","from imblearn.over_sampling import RandomOverSampler\n","# AUC\n","from sklearn.metrics import roc_auc_score #area sob curva roc\n","from sklearn import metrics\n","#AUC: 0.883"]},{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":2101,"status":"ok","timestamp":1677755272571,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"zyRUYE1_pNPQ"},"outputs":[],"source":["# 14 e 15 para testear 16\n","# Lendo os dataframes\n","tr1 = pd.read_excel(\"rol14e15.xlsx\")\n","val1 = pd.read_excel(\"ind16.xlsx\")"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":16,"status":"ok","timestamp":1677755272571,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"nWD9LCCipT27"},"outputs":[],"source":["#Limpando dados faltantes\n","tr1 = tr1.dropna()\n","val1 = val1.dropna()"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":15,"status":"ok","timestamp":1677755272572,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"Z5h1zuRRpT-f"},"outputs":[],"source":["# Separando os dados em x e y\n","# Treino\n","xtr1 = tr1.drop(['dep', 'id', 'Municípios'], axis=1)\n","ytr1 = tr1['dep']\n","\n","# Teste\n","xval1 = val1.drop(['dep', 'id', 'Municípios'], axis=1)\n","yval1 = val1['dep']"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":14,"status":"ok","timestamp":1677755272572,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"MXx6q04npUBM"},"outputs":[],"source":["# Balanceamento da classe\n","smt = RandomOverSampler(random_state=0)"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":12,"status":"ok","timestamp":1677755272573,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"YiZdvbvlpUDu"},"outputs":[],"source":["# balanceando os dados\n","xtr1, ytr1 = smt.fit_resample(xtr1, ytr1)"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":467,"status":"ok","timestamp":1677755273029,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"icsxtMk2pUF3","outputId":"400b3668-5095-49ac-ceb2-81408db06e0f"},"outputs":[{"data":{"text/plain":["0.5850367862255444"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","arveres1 = RandomForestClassifier(n_estimators=110, random_state=41, n_jobs=-1)\n","\n","arveres1.fit(xtr1, ytr1)\n","\n","p1 = arveres1.predict(xval1)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval1, p1))"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1677755273030,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"MEYAQeI3pUIL","outputId":"87aa6c73-642a-499e-cdf5-9baf71dea11d"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         0.0       0.46      0.45      0.45       155\n","         1.0       0.74      0.76      0.75       330\n","\n","    accuracy                           0.66       485\n","   macro avg       0.60      0.60      0.60       485\n","weighted avg       0.65      0.66      0.66       485\n","\n"]}],"source":["# Precisão: de todos os dados classificados como positivos, quantos são realmente positivos.\n","# Recall: qual a porcentagem de dados classificados como positivos comparado com a quantidade real de positivos que existem em nossa amostra.\n","# F1-score: essa métrica une precisão e recall afim de trazer um número único que determine a qualidade geral do nosso modelo.\n","# Acurácia: qual a proporção de gatos e não gatos que foram corretamente classificados\n","from sklearn.metrics import classification_report # metricas de validação\n","print(classification_report(yval1, p1))"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1677755273417,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"kdPM6VC6pUKw","outputId":"ab9d0d56-49e9-4d7d-ee67-02b5c7ae5ca7"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00       716\n","         1.0       1.00      1.00      1.00       716\n","\n","    accuracy                           1.00      1432\n","   macro avg       1.00      1.00      1.00      1432\n","weighted avg       1.00      1.00      1.00      1432\n","\n"]}],"source":["print(classification_report(ytr1, arveres1.predict(xtr1)))"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":734,"status":"ok","timestamp":1677755274140,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"aRni7XZZpUNk","outputId":"73aefcee-a55b-4b7e-9c55-8ca731a9009c"},"outputs":[{"data":{"text/plain":["\u003cBarContainer object of 22 artists\u003e"]},"execution_count":10,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["plt.barh(arveres1.feature_names_in_,arveres1.feature_importances_)"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":21,"status":"ok","timestamp":1677755274141,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"gBx2m_0DpUQs","outputId":"e9202825-a754-4e74-ace6-4ce85e949033"},"outputs":[{"data":{"text/plain":["array([0.04097553, 0.03830535, 0.0376091 , 0.06646795, 0.03198836,\n","       0.03228235, 0.02746747, 0.02689616, 0.03919709, 0.02562156,\n","       0.04475913, 0.03850824, 0.06364092, 0.06319215, 0.17820794,\n","       0.05150376, 0.03711869, 0.03298268, 0.0432209 , 0.0372184 ,\n","       0.02415433, 0.01868192])"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["arveres1.feature_importances_"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":662,"status":"ok","timestamp":1677755274791,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"F9Ixp-J8pUSi","outputId":"6f0f6ede-43f2-4682-8a27-1b90bb1b3893"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# Estimando as probabilidades\n","p1_prob = arveres1.predict_proba(xval1)\n","probs1 = p1_prob[:, 1]\n","rfp1, rvp1,lim1 = roc_curve(yval1, probs1)\n","# Gráfico da curva roc\n","pyplot.plot(rfp1, rvp1, marker='.', label='RF',color=\"orange\")\n","pyplot.plot([0, 1], [0, 1], color='darkblue', linestyle='--')\n","# alterando o nome dos eixos\n","pyplot.xlabel('1- Especificidade')\n","pyplot.ylabel('Sensibilidade')\n","# Legenda\n","pyplot.legend()\n","# Mostrando o gráfico\n","pyplot.show()"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1677755275086,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"lrvCqKZqpUUT","outputId":"27779408-7dce-4f7c-d5d3-774c3f1d37b3"},"outputs":[{"data":{"text/plain":["0.6689442815249266"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["auc1 = metrics.roc_auc_score(yval1, probs1)\n","auc1"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1677755276163,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"7OtaWLgOpUWI","outputId":"893b6279-3536-418f-8f86-f96be327c4bd"},"outputs":[{"data":{"text/plain":["array([[0.27272727, 0.72727273],\n","       [0.54545455, 0.45454545],\n","       [0.39090909, 0.60909091],\n","       [0.70909091, 0.29090909],\n","       [0.37272727, 0.62727273],\n","       [0.66363636, 0.33636364],\n","       [0.07272727, 0.92727273],\n","       [0.34545455, 0.65454545],\n","       [0.00909091, 0.99090909],\n","       [0.25454545, 0.74545455],\n","       [0.64545455, 0.35454545],\n","       [0.9       , 0.1       ],\n","       [0.39090909, 0.60909091],\n","       [0.65454545, 0.34545455],\n","       [0.36363636, 0.63636364],\n","       [0.73636364, 0.26363636],\n","       [0.01818182, 0.98181818],\n","       [0.46363636, 0.53636364],\n","       [0.57272727, 0.42727273],\n","       [0.5       , 0.5       ],\n","       [0.28181818, 0.71818182],\n","       [0.54545455, 0.45454545],\n","       [0.46363636, 0.53636364],\n","       [0.48181818, 0.51818182],\n","       [0.68181818, 0.31818182],\n","       [0.71818182, 0.28181818],\n","       [0.41818182, 0.58181818],\n","       [0.09090909, 0.90909091],\n","       [0.35454545, 0.64545455],\n","       [0.30909091, 0.69090909],\n","       [0.01818182, 0.98181818],\n","       [0.50909091, 0.49090909],\n","       [0.41818182, 0.58181818],\n","       [0.56363636, 0.43636364],\n","       [0.24545455, 0.75454545],\n","       [0.10909091, 0.89090909],\n","       [0.26363636, 0.73636364],\n","       [0.43636364, 0.56363636],\n","       [0.11818182, 0.88181818],\n","       [0.59090909, 0.40909091],\n","       [0.46363636, 0.53636364],\n","       [0.24545455, 0.75454545],\n","       [0.39090909, 0.60909091],\n","       [0.78181818, 0.21818182],\n","       [0.57272727, 0.42727273],\n","       [0.13636364, 0.86363636],\n","       [0.50909091, 0.49090909],\n","       [0.3       , 0.7       ],\n","       [0.24545455, 0.75454545],\n","       [0.77272727, 0.22727273],\n","       [0.30909091, 0.69090909],\n","       [0.11818182, 0.88181818],\n","       [0.01818182, 0.98181818],\n","       [0.38181818, 0.61818182],\n","       [0.53636364, 0.46363636],\n","       [0.59090909, 0.40909091],\n","       [0.49090909, 0.50909091],\n","       [0.37272727, 0.62727273],\n","       [0.74545455, 0.25454545],\n","       [0.56363636, 0.43636364],\n","       [0.39090909, 0.60909091],\n","       [0.15454545, 0.84545455],\n","       [0.03636364, 0.96363636],\n","       [0.78181818, 0.21818182],\n","       [0.33636364, 0.66363636],\n","       [0.34545455, 0.65454545],\n","       [0.30909091, 0.69090909],\n","       [0.36363636, 0.63636364],\n","       [0.60909091, 0.39090909],\n","       [0.01818182, 0.98181818],\n","       [0.67272727, 0.32727273],\n","       [0.40909091, 0.59090909],\n","       [0.45454545, 0.54545455],\n","       [0.02727273, 0.97272727],\n","       [0.10909091, 0.89090909],\n","       [0.4       , 0.6       ],\n","       [0.07272727, 0.92727273],\n","       [0.07272727, 0.92727273],\n","       [0.36363636, 0.63636364],\n","       [0.04545455, 0.95454545],\n","       [0.51818182, 0.48181818],\n","       [0.36363636, 0.63636364],\n","       [0.03636364, 0.96363636],\n","       [0.85454545, 0.14545455],\n","       [0.40909091, 0.59090909],\n","       [0.19090909, 0.80909091],\n","       [0.8       , 0.2       ],\n","       [0.62727273, 0.37272727],\n","       [0.90909091, 0.09090909],\n","       [0.06363636, 0.93636364],\n","       [0.80909091, 0.19090909],\n","       [0.03636364, 0.96363636],\n","       [0.39090909, 0.60909091],\n","       [0.09090909, 0.90909091],\n","       [0.57272727, 0.42727273],\n","       [0.32727273, 0.67272727],\n","       [0.48181818, 0.51818182],\n","       [0.36363636, 0.63636364],\n","       [0.31818182, 0.68181818],\n","       [0.02727273, 0.97272727],\n","       [0.46363636, 0.53636364],\n","       [0.07272727, 0.92727273],\n","       [0.33636364, 0.66363636],\n","       [0.23636364, 0.76363636],\n","       [0.44545455, 0.55454545],\n","       [0.13636364, 0.86363636],\n","       [0.08181818, 0.91818182],\n","       [0.7       , 0.3       ],\n","       [0.22727273, 0.77272727],\n","       [0.34545455, 0.65454545],\n","       [0.33636364, 0.66363636],\n","       [0.52727273, 0.47272727],\n","       [0.1       , 0.9       ],\n","       [0.47272727, 0.52727273],\n","       [0.51818182, 0.48181818],\n","       [0.48181818, 0.51818182],\n","       [0.72727273, 0.27272727],\n","       [0.38181818, 0.61818182],\n","       [0.68181818, 0.31818182],\n","       [0.03636364, 0.96363636],\n","       [0.03636364, 0.96363636],\n","       [0.68181818, 0.31818182],\n","       [0.13636364, 0.86363636],\n","       [0.11818182, 0.88181818],\n","       [0.37272727, 0.62727273],\n","       [0.65454545, 0.34545455],\n","       [0.22727273, 0.77272727],\n","       [0.52727273, 0.47272727],\n","       [0.15454545, 0.84545455],\n","       [0.47272727, 0.52727273],\n","       [0.61818182, 0.38181818],\n","       [0.11818182, 0.88181818],\n","       [0.45454545, 0.54545455],\n","       [0.42727273, 0.57272727],\n","       [0.41818182, 0.58181818],\n","       [0.06363636, 0.93636364],\n","       [0.30909091, 0.69090909],\n","       [0.45454545, 0.54545455],\n","       [0.78181818, 0.21818182],\n","       [0.37272727, 0.62727273],\n","       [0.29090909, 0.70909091],\n","       [0.26363636, 0.73636364],\n","       [0.64545455, 0.35454545],\n","       [0.10909091, 0.89090909],\n","       [0.44545455, 0.55454545],\n","       [0.27272727, 0.72727273],\n","       [0.44545455, 0.55454545],\n","       [0.19090909, 0.80909091],\n","       [0.01818182, 0.98181818],\n","       [0.54545455, 0.45454545],\n","       [0.07272727, 0.92727273],\n","       [0.        , 1.        ],\n","       [0.18181818, 0.81818182],\n","       [0.28181818, 0.71818182],\n","       [0.02727273, 0.97272727],\n","       [0.12727273, 0.87272727],\n","       [0.28181818, 0.71818182],\n","       [0.62727273, 0.37272727],\n","       [0.05454545, 0.94545455],\n","       [0.32727273, 0.67272727],\n","       [0.08181818, 0.91818182],\n","       [0.48181818, 0.51818182],\n","       [0.35454545, 0.64545455],\n","       [0.86363636, 0.13636364],\n","       [0.31818182, 0.68181818],\n","       [0.12727273, 0.87272727],\n","       [0.20909091, 0.79090909],\n","       [0.68181818, 0.31818182],\n","       [0.33636364, 0.66363636],\n","       [0.01818182, 0.98181818],\n","       [0.04545455, 0.95454545],\n","       [0.04545455, 0.95454545],\n","       [0.29090909, 0.70909091],\n","       [0.80909091, 0.19090909],\n","       [0.02727273, 0.97272727],\n","       [0.38181818, 0.61818182],\n","       [0.05454545, 0.94545455],\n","       [0.54545455, 0.45454545],\n","       [0.86363636, 0.13636364],\n","       [0.09090909, 0.90909091],\n","       [0.59090909, 0.40909091],\n","       [0.68181818, 0.31818182],\n","       [0.57272727, 0.42727273],\n","       [0.50909091, 0.49090909],\n","       [0.08181818, 0.91818182],\n","       [0.58181818, 0.41818182],\n","       [0.48181818, 0.51818182],\n","       [0.5       , 0.5       ],\n","       [0.27272727, 0.72727273],\n","       [0.3       , 0.7       ],\n","       [0.40909091, 0.59090909],\n","       [0.05454545, 0.94545455],\n","       [0.46363636, 0.53636364],\n","       [0.48181818, 0.51818182],\n","       [0.36363636, 0.63636364],\n","       [0.53636364, 0.46363636],\n","       [0.01818182, 0.98181818],\n","       [0.56363636, 0.43636364],\n","       [0.46363636, 0.53636364],\n","       [0.71818182, 0.28181818],\n","       [0.37272727, 0.62727273],\n","       [0.13636364, 0.86363636],\n","       [0.6       , 0.4       ],\n","       [0.03636364, 0.96363636],\n","       [0.35454545, 0.64545455],\n","       [0.69090909, 0.30909091],\n","       [0.08181818, 0.91818182],\n","       [0.04545455, 0.95454545],\n","       [0.61818182, 0.38181818],\n","       [0.44545455, 0.55454545],\n","       [0.35454545, 0.64545455],\n","       [0.5       , 0.5       ],\n","       [0.31818182, 0.68181818],\n","       [0.48181818, 0.51818182],\n","       [0.83636364, 0.16363636],\n","       [0.1       , 0.9       ],\n","       [0.70909091, 0.29090909],\n","       [0.5       , 0.5       ],\n","       [0.46363636, 0.53636364],\n","       [0.40909091, 0.59090909],\n","       [0.02727273, 0.97272727],\n","       [0.25454545, 0.74545455],\n","       [0.38181818, 0.61818182],\n","       [0.44545455, 0.55454545],\n","       [0.29090909, 0.70909091],\n","       [0.60909091, 0.39090909],\n","       [0.46363636, 0.53636364],\n","       [0.21818182, 0.78181818],\n","       [0.00909091, 0.99090909],\n","       [0.74545455, 0.25454545],\n","       [0.4       , 0.6       ],\n","       [0.00909091, 0.99090909],\n","       [0.35454545, 0.64545455],\n","       [0.53636364, 0.46363636],\n","       [0.47272727, 0.52727273],\n","       [0.22727273, 0.77272727],\n","       [0.09090909, 0.90909091],\n","       [0.61818182, 0.38181818],\n","       [0.02727273, 0.97272727],\n","       [0.44545455, 0.55454545],\n","       [0.36363636, 0.63636364],\n","       [0.04545455, 0.95454545],\n","       [0.50909091, 0.49090909],\n","       [0.28181818, 0.71818182],\n","       [0.66363636, 0.33636364],\n","       [0.24545455, 0.75454545],\n","       [0.64545455, 0.35454545],\n","       [0.3       , 0.7       ],\n","       [0.12727273, 0.87272727],\n","       [0.73636364, 0.26363636],\n","       [0.50909091, 0.49090909],\n","       [0.44545455, 0.55454545],\n","       [0.25454545, 0.74545455],\n","       [0.44545455, 0.55454545],\n","       [0.53636364, 0.46363636],\n","       [0.40909091, 0.59090909],\n","       [0.75454545, 0.24545455],\n","       [0.09090909, 0.90909091],\n","       [0.43636364, 0.56363636],\n","       [0.49090909, 0.50909091],\n","       [0.55454545, 0.44545455],\n","       [0.30909091, 0.69090909],\n","       [0.39090909, 0.60909091],\n","       [0.33636364, 0.66363636],\n","       [0.43636364, 0.56363636],\n","       [0.22727273, 0.77272727],\n","       [0.39090909, 0.60909091],\n","       [0.74545455, 0.25454545],\n","       [0.02727273, 0.97272727],\n","       [0.58181818, 0.41818182],\n","       [0.32727273, 0.67272727],\n","       [0.36363636, 0.63636364],\n","       [0.1       , 0.9       ],\n","       [0.36363636, 0.63636364],\n","       [0.33636364, 0.66363636],\n","       [0.05454545, 0.94545455],\n","       [0.53636364, 0.46363636],\n","       [0.37272727, 0.62727273],\n","       [0.44545455, 0.55454545],\n","       [0.42727273, 0.57272727],\n","       [0.61818182, 0.38181818],\n","       [0.06363636, 0.93636364],\n","       [0.51818182, 0.48181818],\n","       [0.35454545, 0.64545455],\n","       [0.08181818, 0.91818182],\n","       [0.33636364, 0.66363636],\n","       [0.72727273, 0.27272727],\n","       [0.04545455, 0.95454545],\n","       [0.06363636, 0.93636364],\n","       [0.41818182, 0.58181818],\n","       [0.29090909, 0.70909091],\n","       [0.25454545, 0.74545455],\n","       [0.30909091, 0.69090909],\n","       [0.12727273, 0.87272727],\n","       [0.2       , 0.8       ],\n","       [0.1       , 0.9       ],\n","       [0.47272727, 0.52727273],\n","       [0.58181818, 0.41818182],\n","       [0.56363636, 0.43636364],\n","       [0.02727273, 0.97272727],\n","       [0.71818182, 0.28181818],\n","       [0.56363636, 0.43636364],\n","       [0.56363636, 0.43636364],\n","       [0.54545455, 0.45454545],\n","       [0.30909091, 0.69090909],\n","       [0.34545455, 0.65454545],\n","       [0.5       , 0.5       ],\n","       [0.33636364, 0.66363636],\n","       [0.01818182, 0.98181818],\n","       [0.65454545, 0.34545455],\n","       [0.6       , 0.4       ],\n","       [0.01818182, 0.98181818],\n","       [0.6       , 0.4       ],\n","       [0.47272727, 0.52727273],\n","       [0.33636364, 0.66363636],\n","       [0.53636364, 0.46363636],\n","       [0.37272727, 0.62727273],\n","       [0.45454545, 0.54545455],\n","       [0.88181818, 0.11818182],\n","       [0.02727273, 0.97272727],\n","       [0.01818182, 0.98181818],\n","       [0.25454545, 0.74545455],\n","       [0.00909091, 0.99090909],\n","       [0.74545455, 0.25454545],\n","       [0.45454545, 0.54545455],\n","       [0.6       , 0.4       ],\n","       [0.53636364, 0.46363636],\n","       [0.66363636, 0.33636364],\n","       [0.6       , 0.4       ],\n","       [0.7       , 0.3       ],\n","       [0.01818182, 0.98181818],\n","       [0.33636364, 0.66363636],\n","       [0.43636364, 0.56363636],\n","       [0.42727273, 0.57272727],\n","       [0.30909091, 0.69090909],\n","       [0.68181818, 0.31818182],\n","       [0.51818182, 0.48181818],\n","       [0.75454545, 0.24545455],\n","       [0.68181818, 0.31818182],\n","       [0.45454545, 0.54545455],\n","       [0.33636364, 0.66363636],\n","       [0.26363636, 0.73636364],\n","       [0.61818182, 0.38181818],\n","       [0.5       , 0.5       ],\n","       [0.58181818, 0.41818182],\n","       [0.8       , 0.2       ],\n","       [0.63636364, 0.36363636],\n","       [0.29090909, 0.70909091],\n","       [0.16363636, 0.83636364],\n","       [0.3       , 0.7       ],\n","       [0.57272727, 0.42727273],\n","       [0.66363636, 0.33636364],\n","       [0.6       , 0.4       ],\n","       [0.02727273, 0.97272727],\n","       [0.56363636, 0.43636364],\n","       [0.38181818, 0.61818182],\n","       [0.5       , 0.5       ],\n","       [0.62727273, 0.37272727],\n","       [0.52727273, 0.47272727],\n","       [0.43636364, 0.56363636],\n","       [0.10909091, 0.89090909],\n","       [0.42727273, 0.57272727],\n","       [0.64545455, 0.35454545],\n","       [0.3       , 0.7       ],\n","       [0.04545455, 0.95454545],\n","       [0.35454545, 0.64545455],\n","       [0.55454545, 0.44545455],\n","       [0.41818182, 0.58181818],\n","       [0.47272727, 0.52727273],\n","       [0.09090909, 0.90909091],\n","       [0.34545455, 0.65454545],\n","       [0.44545455, 0.55454545],\n","       [0.41818182, 0.58181818],\n","       [0.32727273, 0.67272727],\n","       [0.52727273, 0.47272727],\n","       [0.45454545, 0.54545455],\n","       [0.8       , 0.2       ],\n","       [0.82727273, 0.17272727],\n","       [0.38181818, 0.61818182],\n","       [0.12727273, 0.87272727],\n","       [0.55454545, 0.44545455],\n","       [0.44545455, 0.55454545],\n","       [0.30909091, 0.69090909],\n","       [0.06363636, 0.93636364],\n","       [0.12727273, 0.87272727],\n","       [0.30909091, 0.69090909],\n","       [0.3       , 0.7       ],\n","       [0.63636364, 0.36363636],\n","       [0.22727273, 0.77272727],\n","       [0.56363636, 0.43636364],\n","       [0.40909091, 0.59090909],\n","       [0.4       , 0.6       ],\n","       [0.05454545, 0.94545455],\n","       [0.49090909, 0.50909091],\n","       [0.37272727, 0.62727273],\n","       [0.5       , 0.5       ],\n","       [0.49090909, 0.50909091],\n","       [0.14545455, 0.85454545],\n","       [0.53636364, 0.46363636],\n","       [0.20909091, 0.79090909],\n","       [0.40909091, 0.59090909],\n","       [0.78181818, 0.21818182],\n","       [0.40909091, 0.59090909],\n","       [0.57272727, 0.42727273],\n","       [0.39090909, 0.60909091],\n","       [0.44545455, 0.55454545],\n","       [0.06363636, 0.93636364],\n","       [0.04545455, 0.95454545],\n","       [0.40909091, 0.59090909],\n","       [0.29090909, 0.70909091],\n","       [0.80909091, 0.19090909],\n","       [0.48181818, 0.51818182],\n","       [0.06363636, 0.93636364],\n","       [0.04545455, 0.95454545],\n","       [0.7       , 0.3       ],\n","       [0.02727273, 0.97272727],\n","       [0.12727273, 0.87272727],\n","       [0.04545455, 0.95454545],\n","       [0.18181818, 0.81818182],\n","       [0.46363636, 0.53636364],\n","       [0.30909091, 0.69090909],\n","       [0.38181818, 0.61818182],\n","       [0.31818182, 0.68181818],\n","       [0.57272727, 0.42727273],\n","       [0.41818182, 0.58181818],\n","       [0.23636364, 0.76363636],\n","       [0.22727273, 0.77272727],\n","       [0.28181818, 0.71818182],\n","       [0.04545455, 0.95454545],\n","       [0.42727273, 0.57272727],\n","       [0.52727273, 0.47272727],\n","       [0.03636364, 0.96363636],\n","       [0.44545455, 0.55454545],\n","       [0.37272727, 0.62727273],\n","       [0.        , 1.        ],\n","       [0.28181818, 0.71818182],\n","       [0.7       , 0.3       ],\n","       [0.49090909, 0.50909091],\n","       [0.46363636, 0.53636364],\n","       [0.16363636, 0.83636364],\n","       [0.84545455, 0.15454545],\n","       [0.24545455, 0.75454545],\n","       [0.46363636, 0.53636364],\n","       [0.32727273, 0.67272727],\n","       [0.27272727, 0.72727273],\n","       [0.69090909, 0.30909091],\n","       [0.41818182, 0.58181818],\n","       [0.78181818, 0.21818182],\n","       [0.26363636, 0.73636364],\n","       [0.56363636, 0.43636364],\n","       [0.35454545, 0.64545455],\n","       [0.07272727, 0.92727273],\n","       [0.34545455, 0.65454545],\n","       [0.21818182, 0.78181818],\n","       [0.66363636, 0.33636364],\n","       [0.40909091, 0.59090909],\n","       [0.44545455, 0.55454545],\n","       [0.90909091, 0.09090909],\n","       [0.07272727, 0.92727273],\n","       [0.58181818, 0.41818182],\n","       [0.73636364, 0.26363636],\n","       [0.06363636, 0.93636364],\n","       [0.39090909, 0.60909091],\n","       [0.3       , 0.7       ],\n","       [0.30909091, 0.69090909],\n","       [0.06363636, 0.93636364],\n","       [0.6       , 0.4       ],\n","       [0.31818182, 0.68181818],\n","       [0.18181818, 0.81818182],\n","       [0.62727273, 0.37272727],\n","       [0.45454545, 0.54545455],\n","       [0.72727273, 0.27272727],\n","       [0.14545455, 0.85454545],\n","       [0.03636364, 0.96363636],\n","       [0.44545455, 0.55454545],\n","       [0.44545455, 0.55454545],\n","       [0.66363636, 0.33636364],\n","       [0.15454545, 0.84545455],\n","       [0.04545455, 0.95454545],\n","       [0.08181818, 0.91818182],\n","       [0.37272727, 0.62727273],\n","       [0.69090909, 0.30909091],\n","       [0.21818182, 0.78181818],\n","       [0.24545455, 0.75454545],\n","       [0.46363636, 0.53636364]])"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["# Estimando as probabilidades\n","p1_prob = arveres1.predict_proba(xval1)\n","p1_prob"]},{"cell_type":"code","execution_count":15,"metadata":{"executionInfo":{"elapsed":10,"status":"ok","timestamp":1677755278353,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"bu-jmN06pUYH"},"outputs":[],"source":["#transformo isso em matriz\n","# Transformar os dados em dataframe\n","## -- Acrescentar nomes para colunas e armazenar tudo em um DataFrame\n","varName = 'prob0'\n","varName1_1 = 'prob1'\n","colunas = [varName, varName1_1]\n","prob1 = pd.DataFrame(p1_prob, columns = colunas)\n","prob1\n","var = 'p1'\n","colunas = [var]\n","p1 = pd.DataFrame(p1, columns = colunas)"]},{"cell_type":"code","execution_count":16,"metadata":{"executionInfo":{"elapsed":421,"status":"ok","timestamp":1677755281590,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"s3jd0udqpUaV"},"outputs":[],"source":["# #Salvando para excel\n","# # #Determina um nome para o arquivo\n","nome1 = 'xval1.xlsx'\n","nome2 = 'p1_prob.xlsx'\n","nome3 = 'yval1.xlsx'\n","\n","# # #salvando\n","xval1.to_excel(nome1)\n","prob1.to_excel(nome2)\n","yval1.to_excel(nome3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9SxfM-DqpUc1"},"outputs":[],"source":["val1_55 = pd.read_excel(\"cortando1_55.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FwFV6L4vpUfL"},"outputs":[],"source":["# Teste\n","xval1_55 = val1_55.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval1_55 = val1_55['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":505,"status":"ok","timestamp":1677351298082,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"IMHYi5QVpUhZ","outputId":"8bf898b9-8bf1-440c-8f26-d846c43fc1e9"},"outputs":[{"data":{"text/plain":["0.5709939257648374"]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p1_55 = arveres1.predict(xval1_55)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval1_55, p1_55))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":800,"status":"ok","timestamp":1677351300629,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"8jy1_V-fpUjy","outputId":"f7aefbcc-0bee-4cd4-cefa-24e0b3966db7"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.46      0.42      0.44       124\n","           1       0.76      0.78      0.77       287\n","\n","    accuracy                           0.67       411\n","   macro avg       0.61      0.60      0.60       411\n","weighted avg       0.67      0.67      0.67       411\n","\n"]}],"source":["print(classification_report(yval1_55, p1_55))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZTFRgIAKpUmV"},"outputs":[],"source":["val1_60 = pd.read_excel(\"cortando1_60.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pi2smOJ7pUot"},"outputs":[],"source":["# Teste\n","xval1_60 = val1_60.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval1_60 = val1_60['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1677351307955,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"HN6nK1lgpUrF","outputId":"f1744234-9fc8-4a0a-e408-84c871048218"},"outputs":[{"data":{"text/plain":["0.5477225575051661"]},"execution_count":26,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p1_60 = arveres1.predict(xval1_60)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval1_60, p1_60))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1677351308205,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"LpWzxfBzpUtk","outputId":"ee522cfd-05b3-4aba-aab3-4dccf70cb540"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.47      0.40      0.43        95\n","           1       0.77      0.82      0.80       235\n","\n","    accuracy                           0.70       330\n","   macro avg       0.62      0.61      0.62       330\n","weighted avg       0.69      0.70      0.69       330\n","\n"]}],"source":["print(classification_report(yval1_60, p1_60))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ong8Kh73pUv7"},"outputs":[],"source":["val1_65 = pd.read_excel(\"cortando1_65.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"l80KIgdhpUzD"},"outputs":[],"source":["# Teste\n","xval1_65 = val1_65.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval1_65 = val1_65['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":241,"status":"ok","timestamp":1677351312227,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"lxIWlc69pU1n","outputId":"d0c5136e-cc32-4c1c-b7e7-f0482c5ddd1c"},"outputs":[{"data":{"text/plain":["0.5235208439728777"]},"execution_count":30,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p1_65 = arveres1.predict(xval1_65)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval1_65, p1_65))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":465,"status":"ok","timestamp":1677351313902,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"DbrjvCpwpU4A","outputId":"b642fd50-e359-4576-ec60-b34142cfd815"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.49      0.42      0.46        73\n","           1       0.80      0.84      0.82       197\n","\n","    accuracy                           0.73       270\n","   macro avg       0.64      0.63      0.64       270\n","weighted avg       0.71      0.73      0.72       270\n","\n"]}],"source":["print(classification_report(yval1_65, p1_65))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"w05TqcW9pU50"},"outputs":[],"source":["val1_70 = pd.read_excel(\"cortando1_70.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-fFeKsw2pU75"},"outputs":[],"source":["xval1_70 = val1_70.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval1_70 = val1_70['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":229,"status":"ok","timestamp":1677351322067,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"v86kID6xpU-W","outputId":"3c53d063-95b2-4b1c-97b8-c733715ef961"},"outputs":[{"data":{"text/plain":["0.4636809247747852"]},"execution_count":34,"metadata":{},"output_type":"execute_result"}],"source":["p1_70 = arveres1.predict(xval1_70)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval1_70, p1_70))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1677351323113,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"f9eGTqflpVAr","outputId":"5ba453ed-caa8-4a24-ec7a-5d4e7f8055b5"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.46      0.45      0.46        40\n","           1       0.86      0.87      0.87       160\n","\n","    accuracy                           0.79       200\n","   macro avg       0.66      0.66      0.66       200\n","weighted avg       0.78      0.79      0.78       200\n","\n"]}],"source":["print(classification_report(yval1_70, p1_70))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XsAXXtUhpVDM"},"outputs":[],"source":["val1_75 = pd.read_excel(\"cortando1_75.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3h8IiFB6pVFk"},"outputs":[],"source":["xval1_75 = val1_75.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval1_75 = val1_75['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":321,"status":"ok","timestamp":1677351328223,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"6Vxpngk-pVII","outputId":"ac8da9d8-75ae-4604-e567-239e8a0fdeb7"},"outputs":[{"data":{"text/plain":["0.4330127018922193"]},"execution_count":38,"metadata":{},"output_type":"execute_result"}],"source":["p1_75 = arveres1.predict(xval1_75)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval1_75, p1_75))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":446,"status":"ok","timestamp":1677351329768,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"voAB614ppVK7","outputId":"d31712a1-c05e-40a6-f88c-5930a14f0a8a"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.42      0.38      0.40        26\n","           1       0.88      0.90      0.89       134\n","\n","    accuracy                           0.81       160\n","   macro avg       0.65      0.64      0.64       160\n","weighted avg       0.81      0.81      0.81       160\n","\n"]}],"source":["print(classification_report(yval1_75, p1_75))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4_LXUOoTpVPi"},"outputs":[],"source":["# 15 e 16 para testar 17\n","# Lendo os dataframes\n","tr2 = pd.read_excel(\"rol15e16.xlsx\")\n","val2 = pd.read_excel(\"ind17.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wf2w8tvTpVSF"},"outputs":[],"source":["#Limpando dados faltantes\n","tr2 = tr2.dropna()\n","val2 = val2.dropna()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iGhxm94xpVUo"},"outputs":[],"source":["# Separando os dados em x e y\n","# Treino\n","xtr2 = tr2.drop(['dep', 'id', 'Municípios'], axis=1)\n","ytr2 = tr2['dep']\n","\n","# Teste\n","xval2 = val2.drop(['dep', 'id', 'Municípios'], axis=1)\n","yval2 = val2['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vWlOmmZbpVXI"},"outputs":[],"source":["# balanceando os dados\n","xtr2, ytr2 = smt.fit_resample(xtr2, ytr2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":952,"status":"ok","timestamp":1677351338433,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"5oSj-wlKpVZ0","outputId":"3ba3aced-71fa-4f38-fc08-36d46cdf3394"},"outputs":[{"data":{"text/plain":["0.5958187643906492"]},"execution_count":44,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","arveres2 = RandomForestClassifier(n_estimators=110, random_state=41, n_jobs=-1)\n","\n","arveres2.fit(xtr2, ytr2)\n","\n","p2 = arveres2.predict(xval2)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval2, p2))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":31,"status":"ok","timestamp":1677351338435,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"-ceVnIumpVcu","outputId":"a7b81e7d-69f1-4cc4-f1ca-b5394efaf454"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         0.0       0.23      0.54      0.32        93\n","         1.0       0.89      0.66      0.76       507\n","\n","    accuracy                           0.65       600\n","   macro avg       0.56      0.60      0.54       600\n","weighted avg       0.78      0.65      0.69       600\n","\n"]}],"source":["print(classification_report(yval2, p2))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1677351338436,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"4ylWyDb8pVfM","outputId":"e0a26649-1967-4102-958f-804b76b45863"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00       659\n","         1.0       1.00      1.00      1.00       659\n","\n","    accuracy                           1.00      1318\n","   macro avg       1.00      1.00      1.00      1318\n","weighted avg       1.00      1.00      1.00      1318\n","\n"]}],"source":["print(classification_report(ytr2, arveres2.predict(xtr2)))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"elapsed":421,"status":"ok","timestamp":1677351340225,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"2Cd1lmFepVhr","outputId":"72d6f689-cae4-421d-b4a1-4f6c4f241ce2"},"outputs":[{"data":{"text/plain":["\u003cBarContainer object of 22 artists\u003e"]},"execution_count":47,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["plt.barh(arveres2.feature_names_in_,arveres2.feature_importances_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1677351341227,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"zhKtY_f3pVkV","outputId":"ba30139b-cce3-4305-dd10-81426d74647b"},"outputs":[{"data":{"text/plain":["array([0.0379575 , 0.03131634, 0.03852314, 0.04378965, 0.03686545,\n","       0.04176675, 0.02949317, 0.0327715 , 0.04839137, 0.03561653,\n","       0.05064071, 0.04678057, 0.09123534, 0.07538012, 0.12987692,\n","       0.03871534, 0.04123641, 0.03591694, 0.03822847, 0.0347498 ,\n","       0.01813244, 0.02261554])"]},"execution_count":48,"metadata":{},"output_type":"execute_result"}],"source":["arveres2.feature_importances_"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"elapsed":605,"status":"ok","timestamp":1677351343788,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"s0YwYwRIpVmp","outputId":"ece70d8b-2d20-4d04-afed-2d216aa4a362"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# Estimando as probabilidades\n","p2_prob = arveres2.predict_proba(xval2)\n","probs2 = p2_prob[:, 1]\n","rfp2, rvp2,lim2 = roc_curve(yval2, probs2)\n","# Gráfico da curva roc\n","pyplot.plot(rfp2, rvp2, marker='.', label='RF',color=\"orange\")\n","pyplot.plot([0, 1], [0, 1], color='darkblue', linestyle='--')\n","# alterando o nome dos eixos\n","pyplot.xlabel('1- Especificidade')\n","pyplot.ylabel('Sensibilidade')\n","# Legenda\n","pyplot.legend()\n","# Mostrando o gráfico\n","pyplot.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":408,"status":"ok","timestamp":1677351345640,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"88nzhy0cpVpD","outputId":"7e7d3700-709f-400c-f20e-5cb9731e03da"},"outputs":[{"data":{"text/plain":["0.6749485694895125"]},"execution_count":50,"metadata":{},"output_type":"execute_result"}],"source":["auc2 = metrics.roc_auc_score(yval2, probs2)\n","auc2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Kb9no0PSpVtw"},"outputs":[],"source":["# #transformo isso em matriz\n","# # Transformar os dados em dataframe\n","# ## -- Acrescentar nomes para colunas e armazenar tudo em um DataFrame\n","varName = 'prob0'\n","varName1_1 = 'prob1'\n","colunas = [varName, varName1_1]\n","prob2 = pd.DataFrame(p2_prob, columns = colunas)\n","prob2\n","var = 'p2'\n","colunas = [var]\n","p2 = pd.DataFrame(p2, columns = colunas)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VzLtojU6pVwA"},"outputs":[],"source":["# #Salvando para excel\n","# #Determina um nome para o arquivo\n","nome1 = 'xval2.xlsx'\n","nome2 = 'p2_prob.xlsx'\n","nome3 = 'yval2.xlsx'\n","\n","# #salvando\n","xval2.to_excel(nome1)\n","prob2.to_excel(nome2)\n","yval2.to_excel(nome3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6r-BMNwkpVyr"},"outputs":[],"source":["val2_55 = pd.read_excel(\"cortando2_55.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fVGlZB-fpV1X"},"outputs":[],"source":["# Teste\n","xval2_55 = val2_55.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval2_55 = val2_55['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":425,"status":"ok","timestamp":1677351973534,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"s7ESt7uWpV4K","outputId":"162fe171-01bf-4512-d147-3683e27d18b5"},"outputs":[{"data":{"text/plain":["0.5744030816453425"]},"execution_count":57,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p2_55 = arveres2.predict(xval2_55)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval2_55, p2_55))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":492,"status":"ok","timestamp":1677351975275,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"xYvBqkZGpV6m","outputId":"7da136fd-276a-47a3-fa5e-7c33f46b5a65"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.21      0.54      0.30        65\n","           1       0.91      0.69      0.78       426\n","\n","    accuracy                           0.67       491\n","   macro avg       0.56      0.61      0.54       491\n","weighted avg       0.82      0.67      0.72       491\n","\n"]}],"source":["print(classification_report(yval2_55, p2_55))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2bEAVb03sK5L"},"outputs":[],"source":["val2_60 = pd.read_excel(\"cortando2_60.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9Ta0vy4jsLWA"},"outputs":[],"source":["# Teste\n","xval2_60 = val2_60.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval2_60 = val2_60['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1677351981266,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"07mnmocisLY1","outputId":"28153ffb-8efd-4dbc-ac2d-213a12ba7df4"},"outputs":[{"data":{"text/plain":["0.5345224838248488"]},"execution_count":61,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p2_60 = arveres2.predict(xval2_60)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval2_60, p2_60))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1677351982510,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"xXOAaQ_FsLbv","outputId":"e181f693-fdee-428f-f6e4-b10f257260d5"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.22      0.58      0.32        45\n","           1       0.93      0.73      0.82       340\n","\n","    accuracy                           0.71       385\n","   macro avg       0.58      0.66      0.57       385\n","weighted avg       0.85      0.71      0.76       385\n","\n"]}],"source":["print(classification_report(yval2_60, p2_60))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nH7heeiXsLe3"},"outputs":[],"source":["val2_65 = pd.read_excel(\"cortando2_65.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PnzGq3MzsLho"},"outputs":[],"source":["# Teste\n","xval2_65 = val2_65.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval2_65 = val2_65['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":277,"status":"ok","timestamp":1677351987912,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"BdBeFVXPsLkh","outputId":"03e5f0e0-34e0-4375-f978-4bf50079fb87"},"outputs":[{"data":{"text/plain":["0.5"]},"execution_count":65,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p2_65 = arveres2.predict(xval2_65)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval2_65, p2_65))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1677351989284,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"FhEPaAKEsLmf","outputId":"c65112ae-6734-499a-a911-efdfbc0a41a5"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.20      0.67      0.31        27\n","           1       0.96      0.76      0.85       297\n","\n","    accuracy                           0.75       324\n","   macro avg       0.58      0.71      0.58       324\n","weighted avg       0.90      0.75      0.80       324\n","\n"]}],"source":["print(classification_report(yval2_65, p2_65))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RwNKbJzFsLoO"},"outputs":[],"source":["val2_70 = pd.read_excel(\"cortando2_70.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QNZWa_blsLqq"},"outputs":[],"source":["# Teste\n","xval2_70 = val2_70.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval2_70 = val2_70['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1677351993715,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"8SAsSj5CsLtK","outputId":"08fba860-8ec8-4c84-f1cc-c4c102b95bfa"},"outputs":[{"data":{"text/plain":["0.4497666910030998"]},"execution_count":69,"metadata":{},"output_type":"execute_result"}],"source":["p2_70 = arveres2.predict(xval2_70)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval2_70, p2_70))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1677351994986,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"2udZMPspsLvr","outputId":"446a0ee5-5deb-4872-825d-3c2707f2faf8"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.22      0.68      0.33        19\n","           1       0.97      0.81      0.88       243\n","\n","    accuracy                           0.80       262\n","   macro avg       0.59      0.75      0.61       262\n","weighted avg       0.92      0.80      0.84       262\n","\n"]}],"source":["print(classification_report(yval2_70, p2_70))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4ByxJuu1sLyM"},"outputs":[],"source":["val2_75 = pd.read_excel(\"cortando2_75.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Od3GlUMcsL0s"},"outputs":[],"source":["# Teste\n","xval2_75 = val2_75.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval2_75 = val2_75['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":589,"status":"ok","timestamp":1677352000648,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"rWKH22dOsL3Y","outputId":"3a824428-36b0-4c1a-a80d-2bca934513f4"},"outputs":[{"data":{"text/plain":["0.3823956264058725"]},"execution_count":73,"metadata":{},"output_type":"execute_result"}],"source":["p2_75 = arveres2.predict(xval2_75)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval2_75, p2_75))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":469,"status":"ok","timestamp":1677352004295,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"5i5skQRysL56","outputId":"379ba682-5650-43fd-d857-43da15fea151"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.25      0.69      0.37        13\n","           1       0.98      0.86      0.92       199\n","\n","    accuracy                           0.85       212\n","   macro avg       0.61      0.78      0.64       212\n","weighted avg       0.93      0.85      0.88       212\n","\n"]}],"source":["print(classification_report(yval2_75, p2_75))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EFRDT7QBsL8e"},"outputs":[],"source":["# 16 e 17 para testar 18\n","# Lendo os dataframes\n","tr3 = pd.read_excel(\"rol16e17.xlsx\")\n","val3 = pd.read_excel(\"ind18.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xYF-mTewsL-9"},"outputs":[],"source":["#Limpando dados faltantes\n","tr3 = tr3.dropna()\n","val3 = val3.dropna()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"n1QnoP5YsMBq"},"outputs":[],"source":["# Separando os dados em x e y\n","# Treino\n","xtr3 = tr3.drop(['dep', 'id', 'Municípios'], axis=1)\n","ytr3 = tr3['dep']\n","\n","# Teste\n","xval3 = val3.drop(['dep', 'id', 'Municípios'], axis=1)\n","yval3 = val3['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GugnfFe3sMFM"},"outputs":[],"source":["# balanceando os dados\n","xtr3, ytr3 = smt.fit_resample(xtr3, ytr3)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1557,"status":"ok","timestamp":1677352016359,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"UrIrsN64sMIB","outputId":"eb5c658f-245a-45a7-cb3d-5b897128048d"},"outputs":[{"data":{"text/plain":["0.6100484332486158"]},"execution_count":79,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","arveres3 = RandomForestClassifier(n_estimators=110, random_state=41, n_jobs=-1)\n","\n","arveres3.fit(xtr3, ytr3)\n","\n","p3 = arveres3.predict(xval3)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval3, p3))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1677352017202,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"eJLw_IF_sMJ7","outputId":"c9cbbd56-533f-404e-a754-c6624c1bbfab"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         0.0       0.81      0.17      0.28       300\n","         1.0       0.61      0.97      0.75       404\n","\n","    accuracy                           0.63       704\n","   macro avg       0.71      0.57      0.51       704\n","weighted avg       0.69      0.63      0.55       704\n","\n"]}],"source":["print(classification_report(yval3, p3))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1677352018547,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"V7OkwWzvsMMC","outputId":"2dbfdfd6-d4ec-40ac-c0f5-20702446b480"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00       837\n","         1.0       1.00      1.00      1.00       837\n","\n","    accuracy                           1.00      1674\n","   macro avg       1.00      1.00      1.00      1674\n","weighted avg       1.00      1.00      1.00      1674\n","\n"]}],"source":["print(classification_report(ytr3, arveres3.predict(xtr3)))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"elapsed":730,"status":"ok","timestamp":1677352021101,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"RrZpXTbZsMOk","outputId":"19cbfe40-78bb-40db-b217-203575df2e35"},"outputs":[{"data":{"text/plain":["\u003cBarContainer object of 22 artists\u003e"]},"execution_count":82,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["plt.barh(arveres3.feature_names_in_,arveres3.feature_importances_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1677352021449,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"mAHnGGUasMRH","outputId":"9faed66c-fe22-4279-eacf-d50f5fb89451"},"outputs":[{"data":{"text/plain":["array([0.0385444 , 0.04394168, 0.0400084 , 0.06488205, 0.05273196,\n","       0.04908899, 0.02575648, 0.03280332, 0.05107989, 0.03208563,\n","       0.04529045, 0.04979245, 0.07271675, 0.07527425, 0.07967205,\n","       0.03770692, 0.04139289, 0.04165594, 0.03820109, 0.03718384,\n","       0.02166608, 0.02852449])"]},"execution_count":83,"metadata":{},"output_type":"execute_result"}],"source":["arveres3.feature_importances_"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"elapsed":438,"status":"ok","timestamp":1677352023143,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"iBEDDROLsMTt","outputId":"f48452ec-8d40-4b9e-9c87-2de720dbf7ae"},"outputs":[{"data":{"image/png":"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\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# Estimando as probabilidades\n","p3_prob = arveres3.predict_proba(xval3)\n","probs3 = p3_prob[:, 1]\n","rfp3, rvp3,lim3 = roc_curve(yval3, probs3)\n","# Gráfico da curva roc\n","pyplot.plot(rfp3, rvp3, marker='.', label='RF',color=\"orange\")\n","pyplot.plot([0, 1], [0, 1], color='darkblue', linestyle='--')\n","# alterando o nome dos eixos\n","pyplot.xlabel('1- Especificidade')\n","pyplot.ylabel('Sensibilidade')\n","# Legenda\n","pyplot.legend()\n","# Mostrando o gráfico\n","pyplot.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":407,"status":"ok","timestamp":1677352041075,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"jCS9nxQnsMWW","outputId":"01246954-bd39-46ff-dc03-38364163b521"},"outputs":[{"data":{"text/plain":["0.8142079207920792"]},"execution_count":85,"metadata":{},"output_type":"execute_result"}],"source":["auc3 = metrics.roc_auc_score(yval3, probs3)\n","auc3"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QbXZytBtsMZA"},"outputs":[],"source":["# #transformo isso em matriz\n","# # Transformar os dados em dataframe\n","# ## -- Acrescentar nomes para colunas e armazenar tudo em um DataFrame\n","varName = 'prob0'\n","varName1_1 = 'prob1'\n","colunas = [varName, varName1_1]\n","prob3 = pd.DataFrame(p3_prob, columns = colunas)\n","prob3\n","var = 'p3'\n","colunas = [var]\n","p3 = pd.DataFrame(p3, columns = colunas)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"K7X5fHpksMbg"},"outputs":[],"source":["# #Salvando para excel\n","# #Determina um nome para o arquivo\n","nome1 = 'xval3.xlsx'\n","nome2 = 'p3_prob.xlsx'\n","nome3 = 'yval3.xlsx'\n","\n","# #salvando\n","xval3.to_excel(nome1)\n","prob3.to_excel(nome2)\n","yval3.to_excel(nome3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0wHfodKesMeN"},"outputs":[],"source":["val3_55 = pd.read_excel(\"cortando3_55.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u_NyYlbDsMg2"},"outputs":[],"source":["# Teste\n","xval3_55 = val3_55.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval3_55 = val3_55['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1677353244383,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"zMgpb7axsMjP","outputId":"8820e3c2-d882-409a-84c7-88382b7658d7"},"outputs":[{"data":{"text/plain":["0.6020797289396148"]},"execution_count":91,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p3_55 = arveres3.predict(xval3_55)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval3_55, p3_55))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":252,"status":"ok","timestamp":1677353245909,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"mBpqyCnEsMlm","outputId":"eba7159b-bd42-4ee5-fd36-7693eb758138"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.76      0.10      0.18       250\n","           1       0.63      0.98      0.77       390\n","\n","    accuracy                           0.64       640\n","   macro avg       0.70      0.54      0.48       640\n","weighted avg       0.68      0.64      0.54       640\n","\n"]}],"source":["print(classification_report(yval3_55, p3_55))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4Yx1SbsCsMoM"},"outputs":[],"source":["val3_60 = pd.read_excel(\"cortando3_60.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p0xGlrkvsMrr"},"outputs":[],"source":["# Teste\n","xval3_60 = val3_60.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval3_60 = val3_60['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":424,"status":"ok","timestamp":1677353250397,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"MV0WjQzxsMuv","outputId":"227754e2-8680-4c1e-cb13-c8af95d9c436"},"outputs":[{"data":{"text/plain":["0.5838068600376237"]},"execution_count":95,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p3_60 = arveres3.predict(xval3_60)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval3_60, p3_60))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":248,"status":"ok","timestamp":1677353251558,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"wkiPpdwjsMwk","outputId":"0e501dd5-ccdd-4663-8e64-01d011493160"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.76      0.08      0.14       208\n","           1       0.66      0.99      0.79       370\n","\n","    accuracy                           0.66       578\n","   macro avg       0.71      0.53      0.46       578\n","weighted avg       0.69      0.66      0.55       578\n","\n"]}],"source":["print(classification_report(yval3_60, p3_60))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"m9Tp-IZzsMyz"},"outputs":[],"source":["val3_65 = pd.read_excel(\"cortando3_65.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Vdy3Pdk5sM0u"},"outputs":[],"source":["# Teste\n","xval3_65 = val3_65.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval3_65 = val3_65['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1677353255200,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"rvy4er1ksM3V","outputId":"b22bc9ff-7582-46db-ab0e-ccc7e467f0ff"},"outputs":[{"data":{"text/plain":["0.5374026160238093"]},"execution_count":99,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p3_65 = arveres3.predict(xval3_65)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval3_65, p3_65))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":410,"status":"ok","timestamp":1677353256973,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"YMTHhvJusM5u","outputId":"a16cd3c0-3ea2-4913-a1d9-da6e52584913"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.82      0.09      0.16       158\n","           1       0.71      0.99      0.83       351\n","\n","    accuracy                           0.71       509\n","   macro avg       0.77      0.54      0.49       509\n","weighted avg       0.74      0.71      0.62       509\n","\n"]}],"source":["print(classification_report(yval3_65, p3_65))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e1qlZn3LsM8X"},"outputs":[],"source":["val3_70 = pd.read_excel(\"cortando3_70.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vniAWZIesM-v"},"outputs":[],"source":["# Teste\n","xval3_70 = val3_70.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval3_70 = val3_70['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":342,"status":"ok","timestamp":1677353261513,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"2Mh32XUUsNBF","outputId":"578d59b8-bdf8-4358-8382-0b2b853d2ca2"},"outputs":[{"data":{"text/plain":["0.49047531817192297"]},"execution_count":103,"metadata":{},"output_type":"execute_result"}],"source":["p3_70 = arveres3.predict(xval3_70)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval3_70, p3_70))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":262,"status":"ok","timestamp":1677353262925,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"mTy4Tu38sNDp","outputId":"44b238dd-c3ce-47ca-c38f-ba6283238994"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.62      0.05      0.09       104\n","           1       0.76      0.99      0.86       320\n","\n","    accuracy                           0.76       424\n","   macro avg       0.69      0.52      0.48       424\n","weighted avg       0.73      0.76      0.67       424\n","\n"]}],"source":["print(classification_report(yval3_70, p3_70))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QMIg2eiLuEp9"},"outputs":[],"source":["val3_75 = pd.read_excel(\"cortando3_75.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0IZ7vNuruEtB"},"outputs":[],"source":["# Teste\n","xval3_75 = val3_75.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval3_75 = val3_75['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1677353267964,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"MYu9ww82uEwE","outputId":"c5adde84-278f-4dac-f63f-7b6f6853cb99"},"outputs":[{"data":{"text/plain":["0.43628076864664694"]},"execution_count":107,"metadata":{},"output_type":"execute_result"}],"source":["p3_75 = arveres3.predict(xval3_75)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval3_75, p3_75))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":242,"status":"ok","timestamp":1677353269643,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"Xc9O52yUuE05","outputId":"9c4f6fcc-ed94-481a-964c-5ce691450dff"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.40      0.03      0.06        66\n","           1       0.82      0.99      0.89       286\n","\n","    accuracy                           0.81       352\n","   macro avg       0.61      0.51      0.48       352\n","weighted avg       0.74      0.81      0.74       352\n","\n"]}],"source":["print(classification_report(yval3_75, p3_75))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"My1LPwqVuE2u"},"outputs":[],"source":["# 17 e 18 para testar 19\n","tr4 = pd.read_excel(\"rol17e18.xlsx\")\n","val4 = pd.read_excel(\"ind19.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O0jU6pUXuE4a"},"outputs":[],"source":["#Limpando dados faltantes\n","tr4 = tr4.dropna()\n","val4 = val4.dropna()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hSgRaIQuuE6S"},"outputs":[],"source":["# Separando os dados em x e y\n","# Treino\n","xtr4 = tr4.drop(['dep', 'id', 'Municípios'], axis=1)\n","ytr4 = tr4['dep']\n","\n","# Teste\n","xval4 = val4.drop(['dep', 'id', 'Municípios'], axis=1)\n","yval4 = val4['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nnTNh0uwuE85"},"outputs":[],"source":["# balanceando os dados\n","xtr4, ytr4 = smt.fit_resample(xtr4, ytr4)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1238,"status":"ok","timestamp":1677353281996,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"gvhdp6UfuFBO","outputId":"bb89e5ef-ff05-436c-aee3-925dc58f30d7"},"outputs":[{"data":{"text/plain":["0.6313641498019763"]},"execution_count":113,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","arveres4 = RandomForestClassifier(n_estimators=110, random_state=41, n_jobs=-1)\n","\n","arveres4.fit(xtr4, ytr4)\n","\n","p4 = arveres4.predict(xval4)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval4, p4))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1677353282382,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"oWGllR4XuFD1","outputId":"1c32d9fb-b390-42e9-f0a8-221b0135f3b7"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         0.0       0.65      0.51      0.58       381\n","         1.0       0.56      0.70      0.62       344\n","\n","    accuracy                           0.60       725\n","   macro avg       0.61      0.61      0.60       725\n","weighted avg       0.61      0.60      0.60       725\n","\n"]}],"source":["print(classification_report(yval4, p4))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1677353283452,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"7QBQrF3fuFGf","outputId":"ccddb9be-8b30-4072-ac2e-51a8106a45ee"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00       911\n","         1.0       1.00      1.00      1.00       911\n","\n","    accuracy                           1.00      1822\n","   macro avg       1.00      1.00      1.00      1822\n","weighted avg       1.00      1.00      1.00      1822\n","\n"]}],"source":["print(classification_report(ytr4, arveres4.predict(xtr4)))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1677353291091,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"4TU4Gwu8uFJT","outputId":"3e307507-96f0-49f0-cc5f-b1c1b37e1e33"},"outputs":[{"data":{"text/plain":["\u003cBarContainer object of 22 artists\u003e"]},"execution_count":116,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["plt.barh(arveres4.feature_names_in_,arveres4.feature_importances_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":382,"status":"ok","timestamp":1677353294126,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"0tn2Un1ZuFM2","outputId":"4daac708-aef5-4787-cf77-972d3156f59f"},"outputs":[{"data":{"text/plain":["array([0.04542213, 0.03989654, 0.03891488, 0.04704901, 0.04135463,\n","       0.04264176, 0.02682863, 0.02804763, 0.03795189, 0.03143979,\n","       0.045853  , 0.04756174, 0.08177342, 0.10366019, 0.1246649 ,\n","       0.04131999, 0.03871462, 0.03461116, 0.03299559, 0.03425747,\n","       0.01692123, 0.01811977])"]},"execution_count":117,"metadata":{},"output_type":"execute_result"}],"source":["arveres4.feature_importances_"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"elapsed":430,"status":"ok","timestamp":1677353295881,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"c2h8ZmzWuFRQ","outputId":"c78243b7-74e0-4a01-873f-5c67b8ef4256"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# Estimando as probabilidades\n","p4_prob = arveres4.predict_proba(xval4)\n","probs4 = p4_prob[:, 1]\n","rfp4, rvp4,lim4 = roc_curve(yval4, probs4)\n","# Gráfico da curva roc\n","pyplot.plot(rfp4, rvp4, marker='.', label='RF',color=\"orange\")\n","pyplot.plot([0, 1], [0, 1], color='darkblue', linestyle='--')\n","# alterando o nome dos eixos\n","pyplot.xlabel('1- Especificidade')\n","pyplot.ylabel('Sensibilidade')\n","# Legenda\n","pyplot.legend()\n","# Mostrando o gráfico\n","pyplot.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":405,"status":"ok","timestamp":1677353297568,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"AO6Oy-HwuFTz","outputId":"d4aa5308-38ef-4fe1-8fa7-70ec4c2c8399"},"outputs":[{"data":{"text/plain":["0.6953625709577"]},"execution_count":119,"metadata":{},"output_type":"execute_result"}],"source":["auc4 = metrics.roc_auc_score(yval4, probs4)\n","auc4"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"B7hSy4uZuFVe"},"outputs":[],"source":["#transformo isso em matriz\n","# Transformar os dados em dataframe\n","## -- Acrescentar nomes para colunas e armazenar tudo em um DataFrame\n","varName = 'prob0'\n","varName1_1 = 'prob1'\n","colunas = [varName, varName1_1]\n","prob4 = pd.DataFrame(p4_prob, columns = colunas)\n","prob4\n","var = 'p4'\n","colunas = [var]\n","p4 = pd.DataFrame(p4, columns = colunas)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-eyP1WlcuFX3"},"outputs":[],"source":["# #Salvando para excel\n","# #Determina um nome para o arquivo\n","nome1 = 'xval4.xlsx'\n","nome2 = 'p4_prob.xlsx'\n","nome3 = 'yval4.xlsx'\n","\n","# #salvando\n","xval4.to_excel(nome1)\n","prob4.to_excel(nome2)\n","yval4.to_excel(nome3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IpZ7lQNduFZk"},"outputs":[],"source":["val4_55 = pd.read_excel(\"cortando4_55.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9Ka8lZuPuFbz"},"outputs":[],"source":["# Teste\n","xval4_55 = val4_55.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval4_55 = val4_55['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1677353734869,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"qlKZHOyhuFeA","outputId":"26986eb5-b95f-48aa-a1c7-3c8d8c4ba6b2"},"outputs":[{"data":{"text/plain":["0.6059714729465039"]},"execution_count":124,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p4_55 = arveres4.predict(xval4_55)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval4_55, p4_55))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1677353736194,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"GaPU8UQzuFgj","outputId":"22627adb-17f1-406e-b557-9abe58be2fd2"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.68      0.51      0.58       281\n","           1       0.61      0.76      0.67       280\n","\n","    accuracy                           0.63       561\n","   macro avg       0.64      0.63      0.63       561\n","weighted avg       0.64      0.63      0.63       561\n","\n"]}],"source":["print(classification_report(yval4_55, p4_55))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SbUA4FETuFjF"},"outputs":[],"source":["val4_60 = pd.read_excel(\"cortando4_60.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PMzfS__ZuFlv"},"outputs":[],"source":["# Teste\n","xval4_60 = val4_60.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval4_60 = val4_60['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1677353741626,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"32L2kB9euFoy","outputId":"b00ca03a-8e86-49af-8404-8d1b6834ad77"},"outputs":[{"data":{"text/plain":["0.5624291338579865"]},"execution_count":128,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p4_60 = arveres4.predict(xval4_60)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval4_60, p4_60))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1677353742918,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"MUmO_NE0vD7I","outputId":"11e30d5d-17e6-41cf-fb10-9bb5150bfa80"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.68      0.50      0.58       169\n","           1       0.68      0.83      0.75       223\n","\n","    accuracy                           0.68       392\n","   macro avg       0.68      0.66      0.66       392\n","weighted avg       0.68      0.68      0.67       392\n","\n"]}],"source":["print(classification_report(yval4_60, p4_60))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nlhrHpOfvD-E"},"outputs":[],"source":["val4_65 = pd.read_excel(\"cortando4_65.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f4jwR7jZvEAz"},"outputs":[],"source":["# Teste\n","xval4_65 = val4_65.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval4_65 = val4_65['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1677353745794,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"TiKSa1hcvED1","outputId":"55cef0b7-4d0b-4a91-e269-aceb7c012835"},"outputs":[{"data":{"text/plain":["0.5362664443598958"]},"execution_count":132,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p4_65 = arveres4.predict(xval4_65)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval4_65, p4_65))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":671,"status":"ok","timestamp":1677353748307,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"lysE7hwIvEHC","outputId":"cd770a67-d527-4173-9421-48ebac631f86"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.66      0.46      0.54       113\n","           1       0.73      0.86      0.79       193\n","\n","    accuracy                           0.71       306\n","   macro avg       0.69      0.66      0.67       306\n","weighted avg       0.70      0.71      0.70       306\n","\n"]}],"source":["print(classification_report(yval4_65, p4_65))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WzINwt37vEJj"},"outputs":[],"source":["val4_70 = pd.read_excel(\"cortando4_70.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dGbufiCMvELk"},"outputs":[],"source":["# Teste\n","xval4_70 = val4_70.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval4_70 = val4_70['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1677353751238,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"h_pRvWTxvEN3","outputId":"e3016bcd-76d7-4723-ef55-de9e4e441c42"},"outputs":[{"data":{"text/plain":["0.4596385597769217"]},"execution_count":136,"metadata":{},"output_type":"execute_result"}],"source":["p4_70 = arveres4.predict(xval4_70)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval4_70, p4_70))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1677353752328,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"ajnI5e2hvEQL","outputId":"09f52fcf-e4b9-4a3f-9693-6576201e3c59"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.69      0.39      0.49        57\n","           1       0.81      0.94      0.87       156\n","\n","    accuracy                           0.79       213\n","   macro avg       0.75      0.66      0.68       213\n","weighted avg       0.77      0.79      0.77       213\n","\n"]}],"source":["print(classification_report(yval4_70, p4_70))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ulCz4z2pvEf0"},"outputs":[],"source":["val4_75 = pd.read_excel(\"cortando4_75.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7LpEkv7evEiv"},"outputs":[],"source":["# Teste\n","xval4_75 = val4_75.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval4_75 = val4_75['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1677353756084,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"BICtevAfvElV","outputId":"374819aa-4b03-4201-9633-642ba50cf321"},"outputs":[{"data":{"text/plain":["0.41070025419420025"]},"execution_count":140,"metadata":{},"output_type":"execute_result"}],"source":["p4_75 = arveres4.predict(xval4_75)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval4_75, p4_75))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1677353757464,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"oNXk8GZ5vkit","outputId":"89699aff-05c0-45be-bdc0-eafc6b235a3c"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.73      0.24      0.36        33\n","           1       0.84      0.98      0.90       133\n","\n","    accuracy                           0.83       166\n","   macro avg       0.78      0.61      0.63       166\n","weighted avg       0.82      0.83      0.80       166\n","\n"]}],"source":["print(classification_report(yval4_75, p4_75))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MoPLTxCUvklm"},"outputs":[],"source":["tr5 = pd.read_excel(\"rol18e19.xlsx\")\n","val5 = pd.read_excel(\"ind20.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9qJ0A9-Evkoe"},"outputs":[],"source":["#Limpando dados faltantes\n","tr5 = tr5.dropna()\n","val5 = val5.dropna()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pFH1bwY7vkrG"},"outputs":[],"source":["# Separando os dados em x e y\n","# Treino\n","xtr5 = tr5.drop(['dep', 'id', 'Municípios'], axis=1)\n","ytr5 = tr5['dep']\n","\n","# Teste\n","xval5 = val5.drop(['dep', 'id', 'Municípios'], axis=1)\n","yval5 = val5['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Wg2LqLYSvkup"},"outputs":[],"source":["# balanceando os dados\n","xtr5, ytr5 = smt.fit_resample(xtr5, ytr5)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":797,"status":"ok","timestamp":1677353847172,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"mTsbtcozvkxA","outputId":"94b98579-47dc-49c9-abb2-ce0b4daa83dc"},"outputs":[{"data":{"text/plain":["0.5027701042999452"]},"execution_count":146,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","arveres5 = RandomForestClassifier(n_estimators=110, random_state=41, n_jobs=-1)\n","\n","arveres5.fit(xtr5, ytr5)\n","\n","p5 = arveres5.predict(xval5)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval5, p5))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1677353847173,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"ZGp5vVtmvkzi","outputId":"738dc1b4-150a-4ca3-d8e6-754bdda05006"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         0.0       0.84      0.81      0.83       531\n","         1.0       0.52      0.57      0.54       189\n","\n","    accuracy                           0.75       720\n","   macro avg       0.68      0.69      0.68       720\n","weighted avg       0.76      0.75      0.75       720\n","\n"]}],"source":["print(classification_report(yval5, p5))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1677353847922,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"FShlw6QdvlZS","outputId":"5e0ea603-52e7-44b2-a7c4-798ded18752f"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00       748\n","         1.0       1.00      1.00      1.00       748\n","\n","    accuracy                           1.00      1496\n","   macro avg       1.00      1.00      1.00      1496\n","weighted avg       1.00      1.00      1.00      1496\n","\n"]}],"source":["print(classification_report(ytr5, arveres5.predict(xtr5)))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"elapsed":421,"status":"ok","timestamp":1677353849164,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"Uy4pyAVnvlcH","outputId":"6fe78fa4-2f24-4e66-9dc6-048989d40102"},"outputs":[{"data":{"text/plain":["\u003cBarContainer object of 22 artists\u003e"]},"execution_count":149,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["plt.barh(arveres5.feature_names_in_,arveres5.feature_importances_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1677353849168,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"WdtlOln0vlel","outputId":"97bdffc2-642d-43b5-d353-1ddc5fdb797d"},"outputs":[{"data":{"text/plain":["array([0.03497807, 0.02945467, 0.03325136, 0.06089879, 0.03960534,\n","       0.03606659, 0.02341542, 0.02486867, 0.04326915, 0.02633159,\n","       0.03915501, 0.03862437, 0.08494903, 0.10220126, 0.15698341,\n","       0.03501799, 0.03823506, 0.03354842, 0.03673551, 0.03801889,\n","       0.02271079, 0.02168061])"]},"execution_count":150,"metadata":{},"output_type":"execute_result"}],"source":["arveres5.feature_importances_"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"elapsed":426,"status":"ok","timestamp":1677353850101,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"UQ7cwsDMvlg_","outputId":"0e1ee8fd-4403-48bc-c6d5-67aae45316f6"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# Estimando as probabilidades\n","p5_prob = arveres5.predict_proba(xval5)\n","probs5 = p5_prob[:, 1]\n","rfp5, rvp5,lim5 = roc_curve(yval5, probs5)\n","# Gráfico da curva roc\n","pyplot.plot(rfp5, rvp5, marker='.', label='RF',color=\"orange\")\n","pyplot.plot([0, 1], [0, 1], color='darkblue', linestyle='--')\n","# alterando o nome dos eixos\n","pyplot.xlabel('1- Especificidade')\n","pyplot.ylabel('Sensibilidade')\n","# Legenda\n","pyplot.legend()\n","# Mostrando o gráfico\n","pyplot.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1677353850326,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"3Oa7wwHZvlja","outputId":"243420dc-d469-409d-b009-cfd2682e3cd3"},"outputs":[{"data":{"text/plain":["0.7441833816598412"]},"execution_count":152,"metadata":{},"output_type":"execute_result"}],"source":["auc5 = metrics.roc_auc_score(yval5, probs5)\n","auc5"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u5uT7-qJvlmC"},"outputs":[],"source":["#transformo isso em matriz\n","# Transformar os dados em dataframe\n","## -- Acrescentar nomes para colunas e armazenar tudo em um DataFrame\n","varName = 'prob0'\n","varName1_1 = 'prob1'\n","colunas = [varName, varName1_1]\n","prob5 = pd.DataFrame(p5_prob, columns = colunas)\n","prob5\n","var = 'p5'\n","colunas = [var]\n","p5 = pd.DataFrame(p5, columns = colunas)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ah6Yb-MBvloX"},"outputs":[],"source":["# #Salvando para excel\n","# #Determina um nome para o arquivo\n","nome1 = 'xval5.xlsx'\n","nome2 = 'p5_prob.xlsx'\n","nome3 = 'yval5.xlsx'\n","\n","# #salvando\n","xval5.to_excel(nome1)\n","prob5.to_excel(nome2)\n","yval5.to_excel(nome3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pcH8kJvAvlq6"},"outputs":[],"source":["val5_55 = pd.read_excel(\"cortando5_55.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W1tOx3gtvmMW"},"outputs":[],"source":["# Teste\n","xval5_55 = val5_55.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval5_55 = val5_55['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1677354451385,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"mmdBefV1vmPK","outputId":"77a0a6f5-2d86-43bc-b0ab-c15c2259b156"},"outputs":[{"data":{"text/plain":["0.46315885939087686"]},"execution_count":158,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p5_55 = arveres5.predict(xval5_55)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval5_55, p5_55))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1677354452263,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"xwJTvaRQvmRo","outputId":"85575506-dd11-4836-ade8-bbb230ff919e"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.86      0.85      0.85       458\n","           1       0.59      0.61      0.60       162\n","\n","    accuracy                           0.79       620\n","   macro avg       0.72      0.73      0.73       620\n","weighted avg       0.79      0.79      0.79       620\n","\n"]}],"source":["print(classification_report(yval5_55, p5_55))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ezsxirxGvmUJ"},"outputs":[],"source":["val5_60 = pd.read_excel(\"cortando5_60.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9iAFrhvivmWn"},"outputs":[],"source":["# Teste\n","xval5_60 = val5_60.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval5_60 = val5_60['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1677354458572,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"qae1dfu9vmZX","outputId":"383252f3-7eca-45f6-84fb-543cae65e58d"},"outputs":[{"data":{"text/plain":["0.4316384911847452"]},"execution_count":162,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p5_60 = arveres5.predict(xval5_60)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval5_60, p5_60))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1677354459790,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"XHyn1S-Ivmbm","outputId":"f0abd264-faa1-4d64-da95-651345ce90d3"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.86      0.89      0.87       385\n","           1       0.66      0.62      0.64       141\n","\n","    accuracy                           0.81       526\n","   macro avg       0.76      0.75      0.76       526\n","weighted avg       0.81      0.81      0.81       526\n","\n"]}],"source":["print(classification_report(yval5_60, p5_60))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5ITpvhWFvEn9"},"outputs":[],"source":["val5_65 = pd.read_excel(\"cortando5_65.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jbYw6TWlwoZC"},"outputs":[],"source":["# Teste\n","xval5_65 = val5_65.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval5_65 = val5_65['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1677354463095,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"ip_4LEm-wob6","outputId":"aed264c0-7e3e-4a4a-c57a-6525ebfa898e"},"outputs":[{"data":{"text/plain":["0.4331778163698664"]},"execution_count":166,"metadata":{},"output_type":"execute_result"}],"source":["# Modelo de random forest\n","# arveres1 = RandomForestClassifier(n_estimators=10, random_state=5, n_jobs=-1)\n","\n","# arveres1.fit(xtr1, ytr1)\n","\n","p5_65 = arveres5.predict(xval5_65)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval5_65, p5_65))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":264,"status":"ok","timestamp":1677354464703,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"plrb4nl-woeS","outputId":"72a00770-8fec-4f41-8da3-c3a85ba2aa22"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.86      0.88      0.87       308\n","           1       0.70      0.64      0.67       129\n","\n","    accuracy                           0.81       437\n","   macro avg       0.78      0.76      0.77       437\n","weighted avg       0.81      0.81      0.81       437\n","\n"]}],"source":["print(classification_report(yval5_65, p5_65))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DKcCK0TFwogu"},"outputs":[],"source":["val5_70 = pd.read_excel(\"cortando5_70.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RjX6RxYhwojY"},"outputs":[],"source":["# Teste\n","xval5_70 = val5_70.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval5_70 = val5_70['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1677354469476,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"MYld5elnwom-","outputId":"16680d59-468a-436a-db6b-b822fa3e50e2"},"outputs":[{"data":{"text/plain":["0.4240409479661728"]},"execution_count":170,"metadata":{},"output_type":"execute_result"}],"source":["p5_70 = arveres5.predict(xval5_70)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval5_70, p5_70))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1677354470658,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"jw5gx3yuworB","outputId":"6a7ceee2-891e-42f4-c342-541d2e8b82b3"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.87      0.88      0.87       220\n","           1       0.71      0.69      0.70        97\n","\n","    accuracy                           0.82       317\n","   macro avg       0.79      0.78      0.79       317\n","weighted avg       0.82      0.82      0.82       317\n","\n"]}],"source":["print(classification_report(yval5_70, p5_70))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EU_cxhomwos2"},"outputs":[],"source":["val5_75 = pd.read_excel(\"cortando5_75.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d1wDsmI4wouy"},"outputs":[],"source":["# Teste\n","xval5_75 = val5_75.drop(['prob0', 'prob1', 'dep'], axis=1)\n","yval5_75 = val5_75['dep']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1677354474184,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"HxoEOC5Vwowo","outputId":"2dfbc27c-8bcd-4b60-a444-969ad7b95ae3"},"outputs":[{"data":{"text/plain":["0.4161251892882395"]},"execution_count":174,"metadata":{},"output_type":"execute_result"}],"source":["p5_75 = arveres5.predict(xval5_75)\n","\n","#raiz quadrada do erro médio quadrado\n","np.sqrt(mean_squared_error(yval5_75, p5_75))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":237,"status":"ok","timestamp":1677354475311,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"PbZu9zXpwozB","outputId":"f84675c1-850f-4fc8-f67c-2327d594b253"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.88      0.85      0.87       151\n","           1       0.74      0.78      0.76        80\n","\n","    accuracy                           0.83       231\n","   macro avg       0.81      0.81      0.81       231\n","weighted avg       0.83      0.83      0.83       231\n","\n"]}],"source":["print(classification_report(yval5_75, p5_75))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1677354476723,"user":{"displayName":"Daniel Garruti","userId":"10252590842140075511"},"user_tz":180},"id":"cZEK6yyLwo08","outputId":"3df81a76-a9a9-4ab7-f29c-c7947ef6b145"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# Gráfico da curva roc\n","pyplot.plot(rfp1, rvp1, marker='.', label='2016',color=\"blue\")\n","pyplot.plot(rfp2, rvp2, marker='.', label='2017',color=\"orange\")\n","pyplot.plot(rfp3, rvp3, marker='.', label='2018',color=\"grey\")\n","pyplot.plot(rfp4, rvp4, marker='.', label='2019',color=\"yellow\")\n","pyplot.plot(rfp5, rvp5, marker='.', label='2020',color='green')\n","pyplot.plot([0, 1], [0, 1], color='darkblue', linestyle='--')\n","# alterando o nome dos eixos\n","pyplot.xlabel('Especificidade')\n","pyplot.ylabel('Sensibilidade')\n","# Legenda\n","pyplot.legend()\n","# Mostrando o gráfico\n","pyplot.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ViKKjmhVwpDK"},"outputs":[],"source":[]}],"metadata":{"colab":{"authorship_tag":"ABX9TyO6Uk6V54OPJJONfcwrEMNU","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}